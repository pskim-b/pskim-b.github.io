<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on PS Developer Tech study</title>
    <link>/categories/spring/</link>
    <description>Recent content in Spring on PS Developer Tech study</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 28 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[WEB] RESTful API</title>
      <link>/posts/spring/web/20211129_restful_api/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/spring/web/20211129_restful_api/</guid>
      <description>RESTful API 개요 RESTful 이란?  REST는 REpresentational State Trasfer의 약어로 웹을 이용할 때 제약 조건들을 정의하는 소프트웨어 아키텍처 스타일 REST 자체의 의미는 네트워크 아키텍쳐 원리(규칙)의 모음이고, 이를 따르는 시스템을 RESTful 이라고 함 REST를 따르는 옹호자들은 스스로를 &amp;lsquo;RESTafrians&amp;rsquo; 이라고 함.  Restful 구성요소 HTTP URI을 통해 리소스를 명시하고 HTTP Method를 통해서 리소스에 대한 CRUD를 제공.
 자원(Resource) : HTTP URI 자원에 대한 행위: HTTP Method 자원에 대한 표현 : Representations  HTTP Method HTTP Method는 다음과 같이 제공된다.</description>
    </item>
    
    <item>
      <title>[WEB] Servlet에 대한 이해</title>
      <link>/posts/spring/web/20210828_%EC%84%9C%EB%B8%94%EB%A6%BFservlet%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4/</link>
      <pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/spring/web/20210828_%EC%84%9C%EB%B8%94%EB%A6%BFservlet%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4/</guid>
      <description>웹 어플리케이션의 기본이라고 할 수 있는 서블릿에 대해서 다시 정리해보았다. 오래된 개념이면서 아직 활발하게 사용되고 있는 기술이기 때문에 개발자들 마다 다른 방식으로 구현하고 있으나 크게 그 의미를 신경쓰지 않는다. 그래서 처음이라고 생각하고 다시 책을 뒤적이며 정리해보았다.
 서블릿Servlet에 대한 이해 서블릿의 기본은 브라우저에서 사용자 request을 받아 처리한 후, 동적 데이터가 채워진 결과를 response하기 위한 내기 위한 Java 프로그램이다. 이를 위해서 서블릿은 자신이 처리하고자 하는 URL을 정의하고, 요청 타입(GET, POST, DELETE 등)에 따른 동작을 정의하게 된다.</description>
    </item>
    
  </channel>
</rss>
