<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stream on PS Developer Tech study</title>
    <link>/tags/stream/</link>
    <description>Recent content in Stream on PS Developer Tech study</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 05 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/stream/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[JAVA] 스트림 API (Stream API)</title>
      <link>/posts/java/202110_java_streaming/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/java/202110_java_streaming/</guid>
      <description>과거에는 Java에서 Stream은 데이터를 전달받거나 저장하기 위해서 많이 사용하였다. 하지만 함수형 프로그래밍 기반으로 프로그램을 작성하면서 데이터 처리에서도 활발하게 스트림 형태를 사용하기 시작했다.
 스트림 API (Stream API) 개요 데이터를 스트림 기반으로 처리하는 경우 다음과 같은 장점이 있음
 다양한 형태의 묶음형 데이터(Container)를 표준화된 방식으로 처리 가능.\  Stream randomStream = Stream.generate(Math::random); Stream strStream = Stream.of(new String[]{&amp;#34;w&amp;#34;,&amp;#34;o&amp;#34;,&amp;#34;w&amp;#34;}); 묶음형 데이터(Container)들의 요소를 순회하며 처리 가능  // asis : for(String name: names){ System.out.println(name); } aList().</description>
    </item>
    
  </channel>
</rss>
